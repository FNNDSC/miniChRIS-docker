# an ephemeral instance of ChRIS backend services for local development
#
# warning: /var/run/docker.sock is mounted into some services (notably pman)

version: '3.9'

services:
  chrisomatic:
    image: ghcr.io/fnndsc/chrisomatic:0.4.1
    networks:
      - local
    volumes:
      - "./chrisomatic.yml:/chrisomatic.yml:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    userns_mode: host
    depends_on:
      - chris
      - chris_store
    profiles:
      - tools
  chris:
    container_name: chris
    image: ghcr.io/fnndsc/cube:4.0.0.pre9
    ports:
      - "8000:8000"
    depends_on:
      - chris_db
      - swift
      - queue
    networks:
      - local
    env_file: secrets.env
    environment:
      DJANGO_DB_MIGRATE: "on"
      DJANGO_COLLECTSTATIC: "on"
    labels:
      org.chrisproject.role: "ChRIS ultron backEnd"
      org.chrisproject.miniChRIS: "miniChRIS"
  worker:
    image: ghcr.io/fnndsc/cube:4.0.0.pre9
    command: celery -A core worker -c 4 -l info -Q main1,main2
    env_file: secrets.env
    environment:
      DJANGO_DB_MIGRATE: "off"
      DJANGO_COLLECTSTATIC: "off"
    depends_on:
      - chris_db
      - swift
      - queue
      - pfcon
    restart: on-failure
    networks:
      - local
  worker_periodic:
    image: ghcr.io/fnndsc/cube:4.0.0.pre9
    environment:
      DJANGO_DB_MIGRATE: "off"
      DJANGO_COLLECTSTATIC: "off"
    command: celery -A core worker -c 2 -l info -Q periodic
    env_file: secrets.env
    depends_on:
      - chris_db
      - queue
    restart: on-failure
    networks:
      - local
  scheduler:
    image: ghcr.io/fnndsc/cube:4.0.0.pre9
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file: secrets.env
    environment:
      DJANGO_DB_MIGRATE: "off"
      DJANGO_COLLECTSTATIC: "off"
    depends_on:
      - chris_db
      - queue
    restart: on-failure
    networks:
      - local
  chris_db:
    image: docker.io/library/postgres:13
    env_file: secrets.env
    restart: on-failure
    volumes:
      - chris_db_data:/var/lib/postgresql
    networks:
      - local
  queue:
    image: docker.io/library/rabbitmq:3
    restart: on-failure
    networks:
      - local

  chris_store:
    container_name: chris_store
    image: ghcr.io/fnndsc/chris_store:2.2.0
    environment:
      - DJANGO_DB_MIGRATE=on
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - DJANGO_ALLOWED_HOSTS=*
      - DJANGO_SECRET_KEY=secret
      - DJANGO_CORS_ALLOW_ALL_ORIGINS=true
      - DJANGO_CORS_ALLOWED_ORIGINS=https://babymri.org
      - DJANGO_SECURE_PROXY_SSL_HEADER=
      - DJANGO_USE_X_FORWARDED_HOST=false
      - DATABASE_HOST=chris_store_db
      - DATABASE_PORT=5432
      - POSTGRES_DB=chris_store
      - POSTGRES_USER=chris
      - POSTGRES_PASSWORD=chirs1234
    ports:
      - "8010:8010"
    depends_on:
      - chris_store_db
    networks:
      local:
        aliases:
          - chrisstore.local
  chris_store_db:
    image: docker.io/library/postgres:13
    environment:
      - POSTGRES_DB=chris_store
      - POSTGRES_USER=chris
      - POSTGRES_PASSWORD=chirs1234
    volumes:
      - chris_store_db_data:/var/lib/postgresql
    networks:
      - local
    labels:
      name: "ChRIS_store MySQL Database"

  swift:
    image: docker.io/fnndsc/docker-swift-onlyone:latest
    init: true
    environment:
      - SWIFT_USERNAME=chris:chris1234
      - SWIFT_KEY=testing
    ports:
      - "8080:8080"
    volumes:
      - swift_storage:/srv
    networks:
      - local

  pfcon:
    container_name: pfcon
    image: ghcr.io/fnndsc/pfcon:5.0.0
    environment:
      COMPUTE_SERVICE_URL: http://pman:5010/api/v1/
      SECRET_KEY: secret
      PFCON_USER: pfcon
      PFCON_PASSWORD: pfcon1234
    ports:
      - "5005:5005"
    volumes:
      - remote:/var/local/storeBase
    networks:
      local:
        aliases:
          - pfcon.host
      remote:
    labels:
      org.chrisproject.role: "pfcon"
    user: "10100"

  pman:
    image: ghcr.io/fnndsc/pman:5.0.0.a4
    container_name: pman
    environment:
      CONTAINER_ENV: docker
      CONTAINER_USER: "10100:"
      ENABLE_HOME_WORKAROUND: "yes"
      JOB_LABELS: "org.chrisproject.miniChRIS=plugininstance"
      SECRET_KEY: secret
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - pfcon
    ports:
      - "5010:5010"
    networks:
      - remote
    userns_mode: "host"
    labels:
      org.chrisproject.role: "pman"

  chris_ui:
    image: ghcr.io/fnndsc/chris_ui:20230404.238-0c6824a5
    command: sirv --host --single
    environment:
      REACT_APP_CHRIS_UI_URL: http://localhost:8000/api/v1/
      REACT_APP_PFDCM_URL: http://localhost:4005/
    ports:
      - "8020:3000"
  chris_store_ui:
    image: ghcr.io/fnndsc/chris_store_ui:0.2.1
    command: sirv --host --single
    environment:
      REACT_APP_STORE_URL: http://localhost:8010/api/v1/
    ports:
      - "8021:3000"

  orthanc:
    image: docker.io/jodogne/orthanc-plugins:1.11.0
    volumes:
      - ./orthanc.json:/etc/orthanc/orthanc.json:ro
      - orthanc:/var/lib/orthanc/db
    ports:
      - "4242:4242"
      - "8042:8042"
    networks:
      - pacs

  pfdcm:
    image: ghcr.io/fnndsc/pfdcm:3.0.12
    container_name: pfdcm
    volumes:
      - pfdcm:/home/dicom:rw
      - ./pfdcm-services:/home/dicom/services:ro
    ports:
      - "4005:4005"
    networks:
      - pacs
      - local
    user: "10100"

  pfdcm-listener:
    image: ghcr.io/fnndsc/pfdcm:3.0.12
    command: sh -c "mkdir -vp /tmp/data && storescp --fork -od /tmp/data -pm -sp -xcr '/usr/local/bin/px-repack --xcrdir \"#p\" --xcrfile \"#f\" --verbosity 0 --logdir /home/dicom/log --datadir /home/dicom/data --cleanup' 11113"
    volumes:
      - pfdcm:/home/dicom:rw
    networks:
      - pacs
    user: "10100"
    restart: on-failure
    depends_on:
      - pfdcm-nonroot-user-volume-fix

  # Non-root container user workarounds

  pfdcm-nonroot-user-volume-fix:
    image: docker.io/library/alpine:latest
    volumes:
      - pfdcm:/home/dicom:rw
    user: root
    command: chown 10100 /home/dicom
    restart: "no"

  pfcon-nonroot-user-volume-fix:
    image: docker.io/library/alpine:latest
    volumes:
      - remote:/var/local/storeBase:rw
    user: root
    command: chown 10100 /var/local/storeBase
    restart: "no"

networks:
  local:
  remote:
  pacs:

volumes:
  chris_db_data:
  chris_store_db_data:
  swift_storage:
  remote:
  orthanc:
  pfdcm:
